version: '3.8'

services:
  db-client:
    image: mysql
    container_name: client-db
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: db_client
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3307:3306"
    networks:
      - microservices-network

  db-account:
    image: mysql
    container_name: account-db
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: db_account
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3308:3306"
    networks:
      - microservices-network

  eureka-server:
    image: eureka
    container_name: eureka-server
    build:
      context: ./eureka-microservice
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  api-gateway:
    image: gateway
    container_name: api-gateway
    build:
      context: ./gateway-microservice
      dockerfile: Dockerfile
    environment:
      EUREKA_SERVER: http://eureka-server:8761/eureka
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - microservices-network

  account-microservice:
    image: account-micro
    container_name: api-account
    build:
      context: ./account-microservice
      dockerfile: Dockerfile
    environment:
      EUREKA_SERVER: http://eureka-server:8761/eureka
      DB_CLIENT_HOST: account-db
      DB_CLIENT_USER: test
      DB_CLIENT_PASSWORD: test
      RABBITMQ_HOST: rabbit
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      - db-account
      - eureka-server
      - api-gateway
      - rabbitmq
    networks:
      - microservices-network

  client-microservice:
    image: client-micro
    container_name: api-client
    build:
      context: ./client-microservice
      dockerfile: Dockerfile
    environment:
      EUREKA_SERVER: http://eureka-server:8761/eureka
      DB_CLIENT_HOST: client-db
      DB_CLIENT_USER: test
      DB_CLIENT_PASSWORD: test
      RABBITMQ_HOST: rabbit
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      - db-client
      - eureka-server
      - api-gateway
      - rabbitmq
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
    name: microservices-network
